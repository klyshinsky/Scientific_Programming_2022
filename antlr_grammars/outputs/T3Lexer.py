# Generated from T3_incorrect.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


import math


def serializedATN():
    return [
        4,0,14,81,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,
        1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,
        1,9,1,9,1,10,1,10,1,11,4,11,66,8,11,11,11,12,11,67,1,12,1,12,5,12,
        72,8,12,10,12,12,12,75,9,12,1,13,4,13,78,8,13,11,13,12,13,79,0,0,
        14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,1,0,4,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,
        3,0,9,10,13,13,32,32,83,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,1,29,1,0,0,0,3,37,1,0,0,0,5,39,1,0,0,0,7,45,1,0,0,0,9,47,
        1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,0,0,0,17,58,1,0,0,0,
        19,60,1,0,0,0,21,62,1,0,0,0,23,65,1,0,0,0,25,69,1,0,0,0,27,77,1,
        0,0,0,29,30,5,114,0,0,30,31,5,101,0,0,31,32,5,116,0,0,32,33,5,117,
        0,0,33,34,5,114,0,0,34,35,5,110,0,0,35,36,5,32,0,0,36,2,1,0,0,0,
        37,38,5,59,0,0,38,4,1,0,0,0,39,40,5,98,0,0,40,41,5,114,0,0,41,42,
        5,101,0,0,42,43,5,97,0,0,43,44,5,107,0,0,44,6,1,0,0,0,45,46,5,42,
        0,0,46,8,1,0,0,0,47,48,5,47,0,0,48,10,1,0,0,0,49,50,5,43,0,0,50,
        12,1,0,0,0,51,52,5,45,0,0,52,14,1,0,0,0,53,54,5,112,0,0,54,55,5,
        111,0,0,55,56,5,119,0,0,56,57,5,40,0,0,57,16,1,0,0,0,58,59,5,44,
        0,0,59,18,1,0,0,0,60,61,5,41,0,0,61,20,1,0,0,0,62,63,5,40,0,0,63,
        22,1,0,0,0,64,66,7,0,0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,65,1,0,0,
        0,67,68,1,0,0,0,68,24,1,0,0,0,69,73,7,1,0,0,70,72,7,2,0,0,71,70,
        1,0,0,0,72,75,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,26,1,0,0,0,
        75,73,1,0,0,0,76,78,7,3,0,0,77,76,1,0,0,0,78,79,1,0,0,0,79,77,1,
        0,0,0,79,80,1,0,0,0,80,28,1,0,0,0,4,0,67,73,79,0
    ]

class T3Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    INT = 12
    ID = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'return '", "';'", "'break'", "'*'", "'/'", "'+'", "'-'", "'pow('", 
            "','", "')'", "'('" ]

    symbolicNames = [ "<INVALID>",
            "INT", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "INT", "ID", "WS" ]

    grammarFileName = "T3_incorrect.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


    res = ""


